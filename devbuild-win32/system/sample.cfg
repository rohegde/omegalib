/********************************************************************************************************************** 
 * THE OMEGA LIB PROJECT
 *---------------------------------------------------------------------------------------------------------------------
 * Copyright 2010								Electronic Visualization Laboratory, University of Illinois at Chicago
 * Authors:										
 *  Alessandro Febretti							febret@gmail.com
 *  Victor Mateevitsi							mvictoras@gmail.com
 *  Arthur Nishimoto							anishimoto42@gmail.com
 *---------------------------------------------------------------------------------------------------------------------
 * Copyright (c) 2010, Electronic Visualization Laboratory, University of Illinois at Chicago
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the 
 * following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the following 
 * disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions 
 * and the following disclaimer in the documentation and/or other materials provided with the distribution. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
 * INCLUDING, BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE  GOODS OR 
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *********************************************************************************************************************/
 // This file can be used as a reference configuration for system configuration files.
config:
{
	input:
	{
		// OpenNI service. This service is to use the Kinect.
		OpenNIService:
		{
			
			// Whether to stream or not the events from all the kinects. For example, if there are two kinects, then it will stream the events from both devices.
			// You can distinguish between devices by looking at the deviceId field of the Event struct.
			// StreamAll has to be TRUE when running the calibration application (mocalib). The reason is because events from both Kinects have to be streamed to
			// mocalib so that it computes the correct transformation matrices.
			// Default:
			// streamAll = false;
			
			// Number of Kinects connected to the system.
			// Default:
			// nmbKinects = 1;

			// Whether to load the calibration from a file.
			// Default:
			// loadCalibrationFromFile = false;
			// Example:
			// loadCalibrationFromFile = "../../data/calibrationFile.xml";
						
			// Transformation matrices for Kinect calibration.
			// The values should be obtained by running the mocalib application
			// Example for 2 Kinects:
                        // referenceTransform:
                        // {
			// 	referenceTranslation0 = [2.001795, -0.008475, 0.372672];
			// 	referenceLinear0 = [0.00017668, -0.00003513, 0.00103474, -0.00019333, 0.00103012, 0.00006798, -0.00101713, -0.00020190, 0.00016682];
			// 	referenceTranslation1 = [-1.922426, -0.216867, 0.448357];
			// 	referenceLinear1 = [0.00002696, 0.00000077, -0.00100504, 0.00013848, 0.00099581, 0.00000448, 0.00099546, -0.00013855, 0.00002660];
			// };

			// Example for 1 Kinect:
 			// referenceTransform:
                        // {
			// 	referenceTranslation0 = [2.001795, -0.008475, 0.372672];
			// 	referenceLinear0 = [0.00017668, -0.00003513, 0.00103474, -0.00019333, 0.00103012, 0.00006798, -0.00101713, -0.00020190, 0.00016682];
			// };
			// Example for 1 Kinect (backword compatible to work with older version of Kinect
			// referenceTransform:
                        // {
			// 	referenceTranslation = [2.001795, -0.008475, 0.372672];
			// 	referenceLinear = [0.00017668, -0.00003513, 0.00103474, -0.00019333, 0.00103012, 0.00006798, -0.00101713, -0.00020190, 0.00016682];
			// };

			// Track only the closest user to a point:
			// trackClosest = [0.0, 0.0, 600.0]; // This is for OmegaDesk
			
		};
		
		// VRPN Service. This service is a client used to connect to VRPN servers.
		// Vicon Tracker 1.2 has built-in VRPN server.
		VRPNService:
		{
			// This is the IP address of the VRPN server.
			//serverIP = "127.0.0.1";
			
			// This is a list of all tracked objects
			//trackedObjects:
			//{
			//	rb1: // Name of object. Only used in this config file.
			//	{
					// Name of the tracked object as listed by the VRPN server.
					// For Vicon Tracker 1.2, these are specified in the Objects tab
			//		name = "rigid_body_1";
					
					// ID for each object. The value here will be used by OmegaLib to
					// uniquely identify this object.
			//		trackableID = 1;
					
					// Optional: This is the address of the VRPN server for this object
					// in the case this object is on a different VRPN server than other objects
					//serverIP = "131.193.77.104";
			//	};
			//	rb2:
			//	{
			//		name = "rigid_body_2";
			//		trackableID = 2;
			//	};
			//};
		};
	};
};