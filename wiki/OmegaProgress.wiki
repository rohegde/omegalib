#summary This page is a pseudo blog of what progress is being made on OmegaLib.

= omegalib v0.4 (*current developement version*) =
==Summary==
This version will the first one to compile on linux as well on windows.
A complete demo application will be included (meshviewer) as well as kinect integration. Sperimental integration with vtk and a small demo application is also planned to be integrated into omegalib 0.4.
*Expected delivery*: June(?)
thingies here
==Completed Tasks==
 * All of codebase compiles on linux (*Alessandro*)
==Work In Progress==
 * complete meshviewer application (*Alessandro*)
 * kinect integration (*Victor*)
 * Integration of PS3 controller (*Arthur*)
 * Integration of XBox 360 controller (*Arthur*)






<br/><br/><br/><br/>
= omegalib v0.3 (*delivery:* End of Year(?)) =
==<u> Alessandro </u>==
 * OmegaLib / VTK Integration
  * Render vtk content into omegalib / equalizer channels (*done*)
  * Integrate OmegaLib input into vtk interaction system (control camera by mouse / touch?)
  * Create separate ovtk library 
 * Test active stereo rendering

==<u> Unassigned </u>==
 * omegalib / Ogre integration?
 * omegalib >> Processing.
 * support linux builds (i386 only for now)


= omegalib v0.2 (*delivery*: October(?)) =

==<u> Dennis </u>== 
 * Convert oTest to oDemo (*DONE*)
 * Documentation for Cristian and Shannon (optiTrack support) (*DONE*)
 * Add to concepts page
 
==<u> Alessandro </u>==
 * Configuration system support (*done*)
  Omega applications should be set up through configuration files and not through code. Working on config file support. 
    
 * Lay down basic omega utility toolkit (*done*)
  outk will offer some additional functionality to applications that need it (i.e. basic GUI support, a simple graphics library, etc.)

 * Start work on outk GUI system (*done* - needs more testing / debugging)
  Add a couple of basic GUI widgets
  * Button (*done*)
  * Slider (*done*)
  * Image (*done*)

 * Add basic support for Input filter creation (*delivery*: ?)
  Input filters will be used to process and mangle input event coming from services, before they get delivered to an omegalib application. Filters can implement functionalities like noise reduction, improved finger / object tracking and gesture support.
    


==<u> Victor </u>==
 * Integrating Kinect and OpenNI to omegalib

 * Waiting for:
  * Gestures
  * Rigid body movements (will it work on 64bit?)

==<u> Brad </u>==
 * Reading papers on 3D gesturing and gesture disambiguation.
 
 * Start working on a simple application to have pattern recognition for
   3D gesturing.
  * Going to try to get a wave and a rotate/pivot gesture working first.

==<u> Arthur </u>==
 * Paint 3D teapot by painting 2D texture map via multi-touch (*delivery*: ?)

 * Update PQService to use config files (*done*)

 * Integrate PQLabs gestures into PQService (*done*)
  * Add PQLabs gestures to oinputservice (*done*)
  * NetService convert gestures back into events (*delivery*: Early February)

 * oinputservice / NetService implementation (*done*)
  * oinputservice streams events out via UDP socket (*done*)
  * NetService capable of receiving events (*done*)
        - Latency issue (*solved*)
  * Processing/TouchAPI capable of receiving events (*done*)
  * Unity capable of receiving events (*done* - mocap and touch)
 
 * Add a multi-user pan/zoom gesture to replace single-user PQLabs gesture (*delivery*: ?)

 * Update PQService to stream TUIO format coordinates using screen ratio (*done*)
 
 * Integration of PS3 controller (*delivery*: Spring '11?)
 * Integration of XBox 360 controller (*delivery*: Spring '11?)

==<u> Unassigned </u>==
 * TacTile integration (*delivery*: ?)
  Implement TacTileService.