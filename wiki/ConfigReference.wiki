#summary Omegalib configuration file reference
#sidebar Sidebar

<p>*Last revision:* ver. 3.4 - 21 February 2013<font color=#ff0000> (This is a preliminary / work in progress document and may be incomplete)</font></p>*

<wiki:toc max_depth="4" />

= Omegalib configuration file reference =
Omegalib applications use configuration files to learn about the the hardware they run on. Configuration files describe the capabilities and geometry of the display system, supported input devices, and network configurations for clustered systems. The omegalib distribution contains several configration files to test applications out of the box (i.e. to run them windowed on a standard PC). Programmers and system administrators can learn about configuration files to customize omegalib applications for other display and input systems.

== Configuration file types ==
Omegalib applications are usually based on two distints configuation files: the *system configuration file* and the *application configuration file*.

The system configuration file determines the properties of the system the application will run on such as:
    * What input devices are available and how they are to be set up
	* The resolution of displays, their geometry, and network configuration for cluster systems
	* The defaults for observer position, navigation styles and interaction keymappings
Examples for several different system configuration files can be found in the `data/system` folder.
	
The application configuration file contains application-specific options, as determined by the application itself. See the `Config` class reference for more information on how to read configuration values. The simplest possible application configuration file is:
<code language="c">
	config:
	{
		systemConfig = "system/desktop.cfg";
	};
</code>
This application configuration specifies no option other than which system configuration file to use (in this case, `system/desktop.cfg`)

== Loading configuration files ==
By default, applications try to open an application configuration file with the application name and a `cfg` extension. If not found, the library will search for `default.cfg`. The default configuration file can be changed by passing a different file as the first argument to an omegalib application.

== System configuration syntax ==
Configuration files follow the syntax of libconfig. Each section has a name and is delimited by curly braces. Section contain name-value pairs. Values can be of different types:
 * Boolean
 * String
 * Integer
 * Floating point
 * Vector of integers or floating points.
A system configuration file contains several sections. A few of them (like the `display` section) are mandatory, while other are optional. The following paragraphs describe the structure of each supported section.

=== Display configuration ===
The display configuration section describes the display system geometry, resources and rendering modes used by omegalib. The `display` section contains the following entries:
 * `type` (string, required): The type of the display system manager running the display system. Can be one of the following values
  * `"Equalizer"`: Uses Equalizer to manage the display system.
 * `geometry` (string, required):
 * `numTiles`
 * `referenceTile`
 * `referenceOffset`
 * `tileSize`
 * `bezelSize`
 * `autoOffsetWindows`
 * `tileResolution`
 * `windowOffset`
 * `latency`
 * `stereoMode`
 * `fullscreen`
 * `disableConfigGenerator`
 * `nodeLauncher`
 * `nodeKiller`
 * `basePort`
 * `launcherInterval`
 * `displayStatsOnMaster`
 * `enableVSync`
 * `enableSwapSync`
 * `tiles`
 
==== Node Configuration ====
 * `hostname`
 * `port`

==== Tile Configuration ====
 * `stereoMode`
 * `device`
 * `center`
 * `yaw`
 * `pitch`
 * `position`
 * `resolution`
 * `offset`
 * `cameraName`
 
=== ui configuration section ===
 * `menuRayPlaceEnabled` (bool)
 * `menuDefaultPosition` (Vector3f)
 * `menuDefaultScale` (float)
 * `menu3dEnabled` (bool)
 * `menuSuspendNavigation` (bool)
 * `menuToggleButton` (String - button name)

=== sound configuration section ===

Here is an example of a complete system configuration file for reference.
<code language="c">
	config:
	{
		display:
		{
			type = "Equalizer";
			geometry = "ConfigPlanar";
			numTiles = [1, 1];
			referenceTile = [0, 0];
			referenceOffset = [0.0, 0.0, 0.0];
			tileSize = [1.2, 0.8];
			autoOffsetWindows = true;
			windowOffset = [200, 200];
			tileResolution = [854, 480];
			interleaved = false;
			fullscreen = false;
			tiles:
			{
				local:
				{
					t0x0: {};
				};
			};
			observers:
			{
				observer0:
				{
					position = [ 0.0,  0.0,  1.0 ];
				};
			};
		};
		input:
		{
			MouseService: {};
			KeyboardService: {};
			ViewRayService:
			{
				inputService="MouseService";
				//inputService="SagePointerService";
				hasNormalizedInput = false;
			};
		};
		defaultFont:
		{
			filename = "fonts/segoeuimod.ttf";
			size = 24;
		};
		camera:
		{
			controller ="KeyboardMouse";
		};
		interactor:
		{
			style = "Mouse";
		};
		menu3dEnabled = true;
		pythonShellEnabled = true;
	};
</code>


