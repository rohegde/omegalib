#summary Omegalib configuration file reference
#sidebar Sidebar

<p>*Last revision:* ver. 2.1<font color=#ff0000> (This is a preliminary / work in progress document and may be incomplete)</font></p>*

==  Camera API ==

		=== cameraGetDefault() ===
		"Returns a reference to the main camera."},


		=== cameraSetPosition(camerRef, x, y, z) ===
		"Sets the camera position."},


		=== cameraGetPosition(cameraRef) ===
		"Gets the camera position."},

 
		=== cameraSetOrientation(cameraRef, yaw, pitch, roll) ===
		"Sets the camera orientation."},


		=== cameraEnableNavigation(cameraRef) ===
		"Enables camera navigation for the specified camera."},


		=== cameraDisableNavigation(cameraRef) ===
		"Disables camera navigation for the specified camera."},

==  Node API ==
 
		=== newNode(parent) ===
		"creates a new scene node and sets its parent."},
    
 
		=== getRoot() ===
		"Return the scene root node"},

 
		=== getName(nodeRef) ===
		"Gets the node name"},

 
		=== getChildCount(nodeRef) ===
		"Gets the node number of children"},

 
		=== getParent(nodeRef) ===
		"Gets the node parent"},

 
		=== getChildByName(nodeRef, name) ===
		"Finds a child of the specified node by name"},

 
		=== getChildByIndex(nodeRef, index) ===
		"Finds a child of the specified node by index"},

 
		=== getPosition(nodeRef) ===
		"Gets the node position"},

 
		=== setPosition(nodeRef, x, y, z) ===
		"Sets the node position"},

 
		=== getScale(nodeRef) ===
		"Gets the node scale"},

 
		=== setScale(nodeRef, x, y, z) ===
		"Sets the node scale"},


		=== resetOrientation(nodeRef) ===
		"Resets the node orientation"},

 
		=== yaw(nodeRef, yaw) ===
		"Sets the node yaw"},


		=== pitch(nodeRef, pitch) ===
		"Sets the node position"},

 
		=== roll(nodeRef, roll) ===
		"Sets the node roll"},

 
		=== isVisible(node) ===
		"Returns wether the node is visible or not"},

 
		=== isSelected(node) ===
		"Returns wether the node is selected or not"},

 
		=== addSelectionListener(node, cmd) ===
		"Attaches a command to be executed whenever the node selection state changes."},

 
		=== addVisibilityListener(node, cmd) ===
		"Attaches a command to be executed whenever the node visibility changes."},

 
		=== printChildren(node, maxDepth) ===
		"prints the node children tree up to maxDepth."},

==  Renderer API ==
 
		=== rendererQueueCommand(funcRef) ===
		"Queues a script fuction to be executed once on all running rendering threads"},

==  Base omegalib API ==
 
		=== oexit() ===
		"Terminates the current omegalib program"},

 
		=== ofindFile(name) ===
		"Searches for a file in the application data filesystems and returns a full path if found"},

 
		=== ofindFile(fileName) ===
		"Runs an external script"},

 
		=== setUpdateFunction(funcRef) ===
		"Registers a script function to be called before each frame is rendered"},
