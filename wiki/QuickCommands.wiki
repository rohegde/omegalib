#summary Quick Commands Reference
#sidebar Sidebar
= Python omegalib developement =
<p>*Last revision:* ver. 3.7 - 27 April 2013
</p>


= Quick Commands Reference = 
In addition to running python code, the omegalib interactive console supports *quick commands* that perform some utility functions at runtime. All quick commands start with a colon symbol, like `:q` or `:r`. 
All omegalib modules (classes derived from `EngineModule`) can expose quick commands.
If you are running a python script from orun you will have some default quick commands available: for a list see the [BasicPython Running Python Applications Page].

== Quick Commands vs Python Functions ==
*TODO*

== Using quick commands from a script ==
It is possible to use quick commands from within a script file, using the `queueCommand` omegalib function. For example, the following is a valid script:
{{{
	from omega import *
	queueCommand(':? SceneNode set') # print all SceneNode methods beginning with 'set'
}}}

== Extending quick commands ==
If you are implementing your own omegalib module, you can expose additional quick commands. Quick commands are useful to allow runtime control for your modules, without the need to expose full python commands. To add quick commands to your module or application in C++, you have to implement the `EngineModule::handleCommand` method. When the user types a command starting with a colon, all modules implementing `handleCommand` will receive a copy of the command. See `src/apps/orun/orun.cpp` for an example of how quick commands are implemented.
