#summary Using Unity with OInputServer.

= Tutorial 8 - Using Unity =

This tutorial will demonstrate how to grab and use OmegaLib input data in Unity.

Currently Unity supports OmegaLib input through the following scripts:
 * InputServiceScript.cs
 * TouchScript.cs
 * MocapScript.cs
 * OmegaControllerScript.cs
 
=== Setting up the InputService ===

InputServiceScript handles communication with OInputServer as well as streaming the apperperiate data to the other scripts listed above. The other scripts parse and store the data revalent to that input device.

 # Create an empty gameobject and name it InputService.
 # Drag InputServiceScript.cs on your InputService gameobject.
 # When you click on the InputService gameobject, you will see the following options:

<p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/InputServiceScript.png"/></p><p align="middle"></p>

 * Input Server - IP address of the tracker machine where OInputServer is running.
 * Data Port - The port on the Unity machine where you want the data sent to.
 * Msg Port - The message port on the tracker machine that OInputServer is listening for clients.
 * Enable Input Service - Toggles the threaded network connection between Unity and OInputServer. This is useful to disable for testing without OInputServer.
 * NEC_Wall_LEFT/NEC_Wall_Right - Adjusts the scale of the touch data to work on half of the touch display only *(Touch Only)*.
 * Touch Time Out - Time in milliseconds before a touch is considered lost/dropped due to packet loss.
 
=== Adding a Touch Object ===
 
 WIP

=== Creating a Mocap Object ===

1. Attach reflective markers to the object you want to track. The markers should be positioned in a way that it has a unique appearence regardless of orientation.

2. Open a 'New Floating Workspace' from the Window menu.

<p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/Vicon01.png"/></p><p align="middle"></p>

3. Place your object in the view of the camera so that all markers appear in the 3D Persepective window.

<p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/Vicon02.png"/></p><p align="middle"></p>

4. Hold the Alt key and drag a window around the markers in the 3D Perspecive window.

<p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/Vicon03.png"/></p><p align="middle"></p>

5. All the markers should now be appear blue and have a raycast from the cameras (see image below).

<p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/Vicon04.png"/></p><p align="middle"></p>

6. Go to the Objects tab and under 'Create Object' at the bottom of the tab, enter the name in the text field and click 'Create'.

<p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/Vicon05.png"/></p><p align="middle"></p>

7. On the desktop double-click 'oinputserver config', scroll down to 'VRPNService' and add your object's name and a unique ID number to the list in the format shown below. This will be the ID you will use in Unity.

8. Double-click on the 'Start oinputserver' shortcut on the desktop to start the server.

=== Adding a Mocap Object to Unity ===

See the above for creating rigid bodies and adding them to the rigid body list.

1. Create a gameobject to have tracked using the mocap script.

2. Set the tag of that gameobject to "OmegaListener"
	 * Create this tag if you haven't already using the Tag drop down menu and Add Tag.
	 
	<p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/UnityAddTag.png"/></p><p align="middle"></p>
 
3. Create a new C# script that extends MocapScript called MyMocapScript.
 
 <p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/UnityMyMocapScript.png"/></p><p align="middle"></p>
 
4. You can call functions like getPosition() and getOrientation() to get the mocap data as a Vector3. You can use the transform function shown in MocapExampleScript.cs.

5. Click on the gameobject you attached MyMocapScript to and check the inspector view. Set the variable My ID to the ID of the rigid body you want to track.

  <p align="middle"><img src="http://omegalib.googlecode.com/svn/wiki/UnityMocapScriptID.png"/></p><p align="middle"></p>
  
=== Adding a Controller Object ===
 
 WIP
 