#Equalizer 1.0 ascii

global
{
    EQ_CONFIG_FATTR_EYE_BASE        0.06
    EQ_WINDOW_IATTR_PLANES_STENCIL ON
}

server
{
    config
    {
        appNode											
        {
            pipe									#Bottom Window
            {
                #----- display0 -----#
                window
                {
                    viewport [ 0 0 1366 768 ]
                    channel 
					{
						name "display0_right" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
                    channel 
					{
						name "display0_left" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
					attributes 
					{ 
						hint_decoration OFF
            			hint_fullscreen OFF
            			hint_doublebuffer ON
					}
                    channel 
					{ 
						name "display0_ch"  
					}
                }
                
                #----- display1 -----#
                
                window
                {
                    viewport [ 0 768 1366 768 ]
                    channel 
					{
						name "display1_right" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
                    channel 
					{
						name "display1_left" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
					attributes 
					{ 
						hint_decoration OFF
            			hint_fullscreen OFF
            			hint_doublebuffer ON
					}

                    channel 
					{ 
						name "display1_ch"  
					}
                }
                
                
                #----- display2 -----#
                
                window
                {
                    viewport [ 0 1536 1366 768 ]
                    channel 
					{
						name "display2_right" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
                    channel 
					{
						name "display2_left" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
					attributes 
					{ 
						hint_decoration OFF
            			hint_fullscreen OFF
            			hint_doublebuffer ON
					}
                    channel 
					{ 
						name "display2_ch"  
					}
                }
                
                
                #----- display3 -----#
                
                window
                {
                    viewport [ 0 2304 1366 768 ]
                    channel 
					{
						name "display3_right" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
                    channel 
					{
						name "display3_left" 
						viewport [ 0 0 1 .5 ]
						drawable [ FBO_COLOR FBO_DEPTH]
					}
					attributes 
					{ 
						hint_decoration OFF
            			hint_fullscreen OFF
            			hint_doublebuffer ON
					}
                    channel 
					{ 
						name "display3_ch"  
					}
                }
                
                #----- stupid -----#
                window
                {
                    name     "stupid"
                    viewport [ 0 -10 10 10]
                    channel 
                    { 
						viewport [.5 0 .5 1]
						name "stupid"  
					}
                    attributes
					{
						hint_decoration ON
            			hint_fullscreen OFF
            			hint_doublebuffer OFF
					}

                }  
                
            }
        }

		observer 
		{ 
			name "observer0" 
		}

        # Layouts - one for each demo mode
        layout
        {
			#view viewport --> norm location based on bottom left corner
            
            #---- display0 -----#
			
			view
            {
                name "display0"
                observer "observer0"
                viewport [ 0 .75 1 .25 ]
            }
            
            #---- display1 -----#
			
			view
            {
                name "display1"
                observer "observer0"
                viewport [ 0 .5 1 .25 ]
            }
           
            #----- display2 -----#
			
			view
            {
                name "display2"
                observer "observer0"
                viewport [ 0 .25 1 .25 ]
            }
            
            #----- display3 -----#
			
			view
            {
                name "display3"
                observer "observer0"
                viewport [ 0 0 1 .25 ]
            }
            
            #----- Stupid -----#
			view
            {
                name "stupid"
                observer "observer0"
                viewport [ 0 -.25 1 .25 ]
            }
        }
		
		# Canvas using all layouts
        canvas
        {
            layout 0

			wall #Physical dim of the screen form the center of the 4x1 displays 
			{
             	bottom_left [ -.51 -1.16 0 ]
				bottom_right [ .51 -1.16 0 ]
				top_left [ -.51 1.16 0 ]
            }
            
            #----- display1 -----#
			segment 
			{ 
				viewport [ 0 .75 1 .25 ]
				channel "display0_ch" 
			}
            
            #----- display1 -----#
			segment 
			{ 
				viewport [ 0 .5 1 .25 ]
				channel "display1_ch" 
			}
         
            #----- display2 -----#
			segment 
			{ 
				viewport [ 0 .25 1 .25 ]
				channel "display2_ch" 
			}
			
			#----- display3 -----#
			segment 
			{ 
				viewport [ 0 0 1 .25 ]
				channel "display3_ch" 
			}
          
            #----- Stupid -----#
            segment
            {
                viewport [ 0 -.25 1 .25 ]
                channel "stupid"
            }
        }

        # wall compound - need swap barrier
        
        #----- display0 -----#
		compound
        {
			channel ( segment 0 view 0 )
			eye [ LEFT RIGHT ]
			attributes { stereo_mode PASSIVE }
			task [ ASSEMBLE ]
            compound
            {
				eye [ RIGHT ]
                channel "display0_left"
                pixel [ 0 0 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            compound
            {
				eye [ LEFT ]
                channel "display0_right"
                pixel [ 0 1 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            inputframe { name "frame.display0_left" }
            inputframe { name "frame.display0_right" }
		}
        
		#----- display1 -----#
		compound
        {
			channel ( segment 1 view 1 )
			eye [ LEFT RIGHT ]
			attributes { stereo_mode PASSIVE }
			task [ ASSEMBLE ]
            compound
            {
				eye [ RIGHT ]
                channel "display1_left"
                pixel [ 0 0 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            compound
            {
				eye [ LEFT ]
                channel "display1_right"
                pixel [ 0 1 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            inputframe { name "frame.display1_left" }
            inputframe { name "frame.display1_right" }
		}
		
		
		#----- display2 -----#
		compound
        {
			channel ( segment 2 view 2 )
			eye [ LEFT RIGHT ]
			attributes { stereo_mode PASSIVE }
			task [ ASSEMBLE ]
            compound
            {
				eye [ RIGHT ]
                channel "display2_left"
                pixel [ 0 0 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            compound
            {
				eye [ LEFT ]
                channel "display2_right"
                pixel [ 0 1 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            inputframe { name "frame.display2_left" }
            inputframe { name "frame.display2_right" }
		}
		
		#----- display3 -----#
		compound
        {
			channel ( segment 3 view 3 )
			eye [ LEFT RIGHT ]
			attributes { stereo_mode PASSIVE }
			task [ ASSEMBLE ]
            compound
            {
				eye [ RIGHT ]
                channel "display3_left"
                pixel [ 0 0 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            compound
            {
				eye [ LEFT ]
                channel "display3_right"
                pixel [ 0 1 1 2 ]     # which pixels to assemble
                outputframe { type texture }
				attributes { stereo_mode PASSIVE }
            }
            inputframe { name "frame.display3_left" }
            inputframe { name "frame.display3_right" }
		}
    }
}
